language: nix
nix: 2.1.3

matrix:
  include:
    - os: linux

os:
  - osx
  - linux

sudo: yes

env:
  global:
    - CACHIX_CACHE=kreisys
    - NUR_REPO=kreisys/nur-packages
    # CACHIX_SIGNING_KEY
    - secure: "FS/7BVZa2lJvY8CUf7dsQHPx37EeNCNEaPi6aPDBMAv6O7cuEYO9NHpE2U2yz67XWbLPOXMCeRtZC64o2E7kxuTgC7c2xnuSXUBWmymBwy0r+v4+h5qPy/DDoT2iyi54H32lqMhE2HNBgTpL4elUhIK+80MUYVYv2KPFEYAAhe1dS1DY1BAFSNqp1aaF5YjCbDjgB/xIW77T5iAHd5o5PdpcSliKNWa0BrfnmmQVO6ulPFA9oUC43H2CI0heYSvIdTUSooQhRjLkAE1bYoDGAyi5r0jFplVk5PqPpFc1FMVba2Ch0UOoHD7KA2wILljQ576bw7IynhDy9O8xs6/+r6eDr5o8Wpk+tKGKgkC015MryG/6M8v3VeRs3+KRJlZ8KSldzqdzA14q6PKSw7XTE6Jm+u+ccAP+qe8jS9dw9tTIVziqd41aMfTLEshmghDABk5Lkg+UXF2eIrN1X0wDvtvVRQUCfKfJIRHBcP5x4gpRRF2wPBGw3ZwmYWfx5JxMAX5tZPugYJjqCqo3LUHeVsynXIMYP43g7FLEba9DhIR9pOz9+emzRNA/TEHv1fI670aJbaJ0DiDEvlvWIDBBUKa5r5gEQcr42LzVryT4bWs5jpwBBjevlTwUSLEsbvVo0I2n9XOg+4ezykWD/8V1ZIdHISMAjaQbAnEfq03yfu0="

matrix:
  allow_failures:
    - os: osx

cache:
  directories:
    - $HOME/nix.store

before_cache:
  - mkdir -p $HOME/nix.store
  - nix copy --to file://$HOME/nix.store

before_install:
  - travis_retry nix-channel --update
  - sudo mkdir -p /etc/nix
  - echo "trusted-users = root $USER" | sudo tee -a /etc/nix/nix.conf
  - echo 'require-sigs = false' | sudo tee -a /etc/nix/nix.conf > /dev/null
  - echo "substituters = https://cache.nixos.org/ https://${CACHIX_CACHE}.cachix.org https://cachix.cachix.org file://$HOME/nix.store" | sudo tee -a /etc/nix/nix.conf > /dev/null
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo launchctl stop org.nixos.nix-daemon; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo launchctl start org.nixos.nix-daemon && sleep 5; fi

install:
  - nix --version
  - if [ -n "${CACHIX_CACHE}" ]; then nix-env -if https://github.com/cachix/cachix/tarball/master --substituters https://cachix.cachix.org --trusted-public-keys cachix.cachix.org-1:eWNHQldwUO7G2VkjpnjDbWwy4KQ/HNxht7H4SSoMckM=; fi
  - if [ -n "${CACHIX_CACHE}" ]; then cachix use "${CACHIX_CACHE}"; fi

script:
 - outs=$(nix-build non-broken.nix) && echo Produced $outs
 - nix eval -f default.nix 'lib'
 - nix eval -f default.nix 'modules'
 - nix eval -f default.nix 'overlays'

after_success:
  - if [ -n "${CACHIX_CACHE}" ]; then cachix push "${CACHIX_CACHE}" $outs; fi
  - if [ "false" = "${TRAVIS_PULL_REQUEST}" -a "master" = "${TRAVIS_BRANCH}" ]; then
      curl -XPOST "https://nur-update.herokuapp.com/update?repo=${NUR_REPO}"; fi

